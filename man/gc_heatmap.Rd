% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GC_Heatmap.R
\name{gc_heatmap}
\alias{gc_heatmap}
\title{gc_heatmap visualises the goodness of the chromatogram alignment}
\usage{
gc_heatmap(GcOut, algorithm_step = c("aligned_rts", "linear_transformed_rts",
  "input_rts"), substance_subset = NULL, guide = c("legend", "colourbar"),
  samples_subset = NULL, type = c("binary", "continous"),
  threshold = 0.05)
}
\arguments{
\item{GcOut}{object of class "GCalign", the output of align_chromatograms.}

\item{algorithm_step}{character string, indicating which step of the algorithm is plotted. Either
\strong{input_rts}, \strong{linear_transformed_rts} or \strong{aligned_rts}}

\item{substance_subset}{Vector containing indices of substances (i.e. rows) to plot
By default \code{NULL} indicating all substances are plotted}

\item{guide}{Character string, selects the type of colourbar as discrete (i.e 'legend')
or gradient (i.e 'colourbar)}

\item{samples_subset}{Vector indicating which samples are plotted on the heatmap.
Either a numeric vector of indices or a vector of sample names}

\item{type}{Character specifying whether a binary heatmap or a heatmap of continous
deviations is plotted.}

\item{threshold}{Decimal indicating the threshold deviation of individual peak retention times
from the mean retention time of the respective peak across all samples.}
}
\value{
object of class "ggplot"
}
\description{
Visualises the deviation of single samples from the whole population by comparing
the actual retention time against the mean of all other samples containing the same
substance. Two types of heatmaps are available. A binary heatmap allows to determine
if single samples within each chromatogram are correctly assigned to a certain substance,
by setting a fixed threshold of allowed deviations from the mean. The optional discrete
heatmap allows to check the deviations quantitatively.
}
\examples{

 ## with defaults
 gc_heatmap(seal_peaks_aligned, algorithm_step="aligned_rts")

 ## input data
 gc_heatmap(seal_peaks_aligned,algorithm_step="input_rts")

 ## subset of the first 50 Peaks
 gc_heatmap(seal_peaks_aligned,algorithm_step="aligned_rts",substance_subset = 1:50)

 ## subset of individuals, stricter threshold
 gc_heatmap(seal_peaks_aligned,samples_subset = c("ind1","ind2","ind9","ind14"),threshold=0.02)

}
\author{
Martin Stoffel (martin.adam.stoffel@gmail.com) &
        Meinolf Ottensmann (meinolf.ottensmann@web.de)
}

